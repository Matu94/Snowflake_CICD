name: Deploy Modified Files to Snowflake PROD env

#triggers ONLY on a push to the main branch
on:
  push:
    branches:
      - main

jobs:
  deploy-snowflake-changes:
    name: Deploy to Snowflake
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.CICD_DEMO_DB }}
      SNOWFLAKE_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}
      PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSPHRASE }}
      SNOWFLAKE_AUTHENTICATOR: 'SNOWFLAKE_JWT'

    steps:
      # Check out the repository's code.
      # fetch-depth: 0 - get all commit history for the git diff command.
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Snow CLI
        uses: snowflakedb/snowflake-cli-action@v1.5

      - name: Find and Deploy Modified SQL Files
        run: |
          echo "Identifying changed files..."
          
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- 'Snowflake/**/*.sql' || true)

          if [ -z "$CHANGED_FILES" ]; then
            echo "No modified SQL files found in this push."
            exit 0
          fi
          
          FILES_TO_DEPLOY=$(echo "$CHANGED_FILES" | sort)

          echo "The following files will be deployed in this order:"
          echo "$FILES_TO_DEPLOY"

          while IFS= read -r FILE; do
            if [ -n "$FILE" ]; then
              echo "--------------------------------------------------"
              echo "Executing: $FILE"
              OUTPUT=$(snow sql -f "$FILE" --temporary-connection 2>&1)
              EXIT_CODE=$?

              if [ $EXIT_CODE -eq 0 ]; then
                STATUS="SUCCESS"
                ERROR_MSG=""
                echo "Successfully executed $FILE"
              else
                STATUS="FAILED"
                ERROR_MSG=$(echo "$OUTPUT" | sed "s/'/''/g")
                echo "Execution of $FILE failed with error: $OUTPUT"
              fi
              
              LOG_QUERY="INSERT INTO CICD_DEMO_DB.PUBLIC.DEPLOYMENT_HISTORY (FILENAME, COMMIT_SHA, GITHUB_ACTOR, STATUS, ERROR_MESSAGE) VALUES ('$FILE', '${{ github.sha }}', '${{ github.actor }}', '$STATUS', '$ERROR_MSG');"
              snow sql -q "$LOG_QUERY" --temporary-connection
              echo "Logged deployment for $FILE with status: $STATUS"
              
              echo "--------------------------------------------------"
            fi
          done <<< "$FILES_TO_DEPLOY"
